---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    package-operator.run/phase: rbac
  creationTimestamp: null
  name: validation-webhook
---
apiVersion: v1
kind: ConfigMap
metadata:
  annotations:
    package-operator.run/phase: config
    service.beta.openshift.io/inject-cabundle: "true"
  creationTimestamp: null
  name: webhook-cert
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    package-operator.run/phase: deploy
    service.beta.openshift.io/serving-cert-secret-name: webhook-cert
  creationTimestamp: null
  labels:
    name: validation-webhook
  name: validation-webhook
spec:
  ports:
  - name: https
    port: 443
    protocol: TCP
    targetPort: 5000
  selector:
    app: validation-webhook
  type: ClusterIP
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    package-operator.run/phase: deploy
  creationTimestamp: null
  labels:
    app: validation-webhook
  name: validation-webhook
spec:
  replicas: 3
  selector:
    matchLabels:
      app: validation-webhook
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: validation-webhook
    spec:
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - preference:
              matchExpressions:
              - key: hypershift.openshift.io/hosted-control-plane
                operator: In
                values:
                - "true"
            weight: 50
          - preference:
              matchExpressions:
              - key: hypershift.openshift.io/cluster
                operator: In
                values:
                - '{{.package.metadata.namespace}}'
            weight: 100
        podAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchLabels:
                  hypershift.openshift.io/hosted-control-plane: '{{.package.metadata.namespace}}'
              topologyKey: kubernetes.io/hostname
            weight: 100
      containers:
      - command:
        - webhooks
        - -tlskey
        - /service-certs/tls.key
        - -tlscert
        - /service-certs/tls.crt
        - -cacert
        - /service-ca/service-ca.crt
        - -tls
        image: REPLACED_BY_PIPELINE
        imagePullPolicy: IfNotPresent
        name: webhooks
        ports:
        - containerPort: 5000
        resources: {}
        volumeMounts:
        - mountPath: /service-certs
          name: service-certs
          readOnly: true
        - mountPath: /service-ca
          name: service-ca
          readOnly: true
      restartPolicy: Always
      serviceAccountName: validation-webhook
      tolerations:
      - effect: NoSchedule
        key: hypershift.openshift.io/hosted-control-plane
        operator: Equal
        value: "true"
      - effect: NoSchedule
        key: hypershift.openshift.io/cluster
        operator: Equal
        value: '{{.package.metadata.namespace}}'
      volumes:
      - name: service-certs
        secret:
          secretName: webhook-cert
      - configMap:
          name: webhook-cert
        name: service-ca
status: {}
